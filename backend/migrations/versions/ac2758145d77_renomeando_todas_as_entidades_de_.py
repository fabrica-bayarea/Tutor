"""Renomeando todas as entidades de 'Documento' para 'Arquivo'; Criando nova entidade intermediária para relacionar arquivos com matérias dentro de turmas específicas; Excluindo entidade intermediária 'DocumentoMateria'; Renomeando o campo 'timestamp' para 'data_upload' no modelo 'Arquivo'; Criando relacionamentos sólidos entre as entidades e as tabelas intermediárias

Revision ID: ac2758145d77
Revises: 2085eb946509
Create Date: 2025-04-14 00:18:20.368857

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'ac2758145d77'
down_revision = '2085eb946509'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('arquivos',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('titulo', sa.String(length=255), nullable=False),
    sa.Column('professor_id', sa.UUID(), nullable=False),
    sa.Column('data_upload', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['professor_id'], ['professores.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('professores_turmas',
    sa.Column('professor_id', sa.UUID(), nullable=False),
    sa.Column('turma_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['professor_id'], ['professores.id'], ),
    sa.ForeignKeyConstraint(['turma_id'], ['turmas.id'], ),
    sa.PrimaryKeyConstraint('professor_id', 'turma_id')
    )
    op.create_table('arquivos_turmas_materias',
    sa.Column('arquivo_id', sa.UUID(), nullable=False),
    sa.Column('turma_id', sa.UUID(), nullable=False),
    sa.Column('materia_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['arquivo_id'], ['arquivos.id'], ),
    sa.ForeignKeyConstraint(['materia_id'], ['materias.id'], ),
    sa.ForeignKeyConstraint(['turma_id'], ['turmas.id'], ),
    sa.PrimaryKeyConstraint('arquivo_id', 'turma_id', 'materia_id')
    )
    op.drop_table('documentos_materias')
    op.drop_table('documentos')
    with op.batch_alter_table('alunos', schema=None) as batch_op:
        batch_op.add_column(sa.Column('cpf', sa.String(length=11), nullable=False))
        batch_op.alter_column('matricula',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=10),
               existing_nullable=False)
        batch_op.create_unique_constraint(None, ['cpf'])

    with op.batch_alter_table('professores', schema=None) as batch_op:
        batch_op.add_column(sa.Column('cpf', sa.String(length=11), nullable=False))
        batch_op.alter_column('matricula',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=10),
               existing_nullable=False)
        batch_op.create_unique_constraint(None, ['cpf'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('professores', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.alter_column('matricula',
               existing_type=sa.String(length=10),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)
        batch_op.drop_column('cpf')

    with op.batch_alter_table('alunos', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.alter_column('matricula',
               existing_type=sa.String(length=10),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)
        batch_op.drop_column('cpf')

    op.create_table('documentos',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), autoincrement=False, nullable=False),
    sa.Column('titulo', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('professor_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['professor_id'], ['professores.id'], name='documentos_professor_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='documentos_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('documentos_materias',
    sa.Column('documento_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('materia_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['documento_id'], ['documentos.id'], name='documentos_materias_documento_id_fkey'),
    sa.ForeignKeyConstraint(['materia_id'], ['materias.id'], name='documentos_materias_materia_id_fkey')
    )
    op.drop_table('arquivos_turmas_materias')
    op.drop_table('professores_turmas')
    op.drop_table('arquivos')
    # ### end Alembic commands ###
